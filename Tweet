\q
\l
psql prisma
\q
\q
\list
\list
du
/du
\du:
exit
\q
:q
q:
exit
\q
CREATE DATABASE testone;
\l
\l
pqsl --help
\q
/c test
\c test
\l
/c testone
\c testone
CREATE TABLE person (
  id int,
  first_name VARCHAR(50),
  last_name VARCHAR(50)
  gender VARCHAR(6),
  date_of_birth TIMESTAMP,
)
;
CREATE TABLE person (
  id int,
  first_name VARCHAR(50),
  last_name VARCHAR(50)
  gender VARCHAR(6),
  date_of_birth TIMESTAMP,
);
CREATE TABLE person (
  id int,
  first_name VARCHAR(50),
  last_name VARCHAR(50),
  gender VARCHAR(7),
  date_of_birth TIMESTAMP,
);
CREATE TABLE person (
  id int,
  first_name VARCHAR(50),
  last_name VARCHAR(50),
  gender VARCHAR(7),
  date_of_birth TIMESTAMP,
)
;
CREATE TABLE person (
  id int,
  first_name VARCHAR(50),
  last_name VARCHAR(50),
  gender VARCHAR(7),
  date_of_birth TIMESTAMP
);
\d
DROP TABLE person
;
\d
CREATE TABLE person (
  id BIGSERIAL NOT NULL PRIMARY KEY,
  first_name VARCHAR(50) NOT NULL,
  last_name VARCHAR(50) NOT NULL,
  gender VARCHAR(7) NOT NULL,
  date_of_birth DATE NOT NULL
);
\d person
INSERT INTO person (
  first_name,
  last_name,
  gender,
  date_of_birth
)
VALUES ('Anne', 'Smith', 'FEMALE', DATE '1988-01-08');
INSERT INTO person (
  first_name,
  last_name,
  gender,
  date_of_birth
)
VALUES ('Jake', 'Jones', 'MALE', DATE '1990-10-08');
\d person
\i /Users/mitch/Desktop/person.sql
\d
DROP TABLE person
\i /Users/mitch/Desktop/person.sql
/d person
\d person
DROP TABLE person
\d person
DROP TABLE person
DROP TABLE person;
DROP TABLE person;
\i /Users/mitch/Desktop/person.sql
DROP TABLE person
;
\i /Users/mitch/Desktop/person.sql
SELECT * FROM person
;
DROP TABLE person
\i /Users/mitch/Desktop/person.sql
SELECT * FROM person
;
SELECT * From person
;
DROP TABLE person;
\l
\d
\i /Users/mitch/Desktop/person.sql;
select * from person;
\d
\d
\l
\c testone
\dt
select * from person;
select distinct country_of_birth from person;
select * from person where country_of_origin = 'Australia' 
;
\d
\d person
select * from person
;
select * from person where country_of_birth = 'Australia' 
;
SELECT country_of_birth, COUNT(*) FROM person GROUP BY country_of_birth;
SELECT country_of_birth, COUNT(*) FROM person GROUP BY country_of_birth ORDER BY country_of_birth
;
\d
\l
\c lireddit
\dt
\dt user
select * from user
;
select * from post;
select * from user;
;
select * from user;
select * from user;
select * from user;
select * from post;
/d
\d
\c user
\d user
select * from user
DROP TABLE user
;
drop table user;
drop table user;
drop table "user";
\d
DROP DATABASE lireddit
;
\c lireddit
\d
select * from "user"
;
select * from post
;
\c lireddit2
\d
select * from post
;
select * from post
select * from post
;
select * from post;
select * from post;
select * from post;
select * from post;
\d
select * from migrations
;
select * from migrations
;
\i /Users/mitch/Desktop
\i /Users/mitch/Desktop/post.sql
select * from migrations
;
select * from posts
;
\d
select * from post
;
select * from migrations
;
select * from migrations
;
select * from migrations
;
select * from migrations
;
select * from post;
select * from post;
\d
select * from migrations;
drop table post;
\d
\d
\d post
drop table post;
\d
drop table post;
drop table post;
drop table user;
drop table "user";
\d
select  * from post
;
select * from migrations;
drop table "user";
drop table post;
drop table migrations;
drop table "user";
insert into post (title, text, "creatorId", "creatorAt") values ('Troll', 'Proin eu mi. Nulla ac enim. In tempor, turpis nec euismod scelerisque, quam turpis adipiscing lorem, vitae mattis nibh ligula nec sem.

Duis aliquam convallis nunc. Proin at turpis a pede posuere nonummy. Integer non velit.

Donec diam neque, vestibulum eget, vulputate ut, ultrices vel, augue. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Donec pharetra, magna vestibulum aliquet ultrices, erat tortor sollicitudin mi, sit amet lobortis sapien sapien non mi. Integer ac neque.', 1, '2021-01-10T06:34:23Z');
insert into post (title, text, "creatorId", "creatorAt") values ('Troll', 'Proin eu mi. Nulla ac enim. In tempor, turpis nec euismod scelerisque, quam turpis adipiscing lorem, vitae mattis nibh ligula nec sem.

Duis aliquam convallis nunc. Proin at turpis a pede posuere nonummy. Integer non velit.

Donec diam neque, vestibulum eget, vulputate ut, ultrices vel, augue. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Donec pharetra, magna vestibulum aliquet ultrices, erat tortor sollicitudin mi, sit amet lobortis sapien sapien non mi. Integer ac neque.', 1, '2021-01-10T06:34:23Z');
\d
\d post
insert into post (title, text, creatorId, creatorAt) values ('Troll', 'Proin eu mi. Nulla ac enim. In tempor, turpis nec euismod scelerisque, quam turpis adipiscing lorem, vitae mattis nibh ligula nec sem.

Duis aliquam convallis nunc. Proin at turpis a pede posuere nonummy. Integer non velit.

Donec diam neque, vestibulum eget, vulputate ut, ultrices vel, augue. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Donec pharetra, magna vestibulum aliquet ultrices, erat tortor sollicitudin mi, sit amet lobortis sapien sapien non mi. Integer ac neque.', 1, '2021-01-10T06:34:23Z');
\d
\l
drop database lireddit2
;
createdb lireddit2;
createdb lireddit2
;
exist
exit
\q
\l
\c lireddit2
\d
\d
select * from post
;
select * from post
;
select * from post
;
\d
\d user
select * from 
"users";
select * from "user";
\d
select * from post;
select * from migrationsl
;
select * from migrations;
\x post
\x on
select * from post;
select COUNT(*) from post;
select COUNT(*) from post;
\d
/l
\l
\x off
\d
select * from upvote
;
select * from upvote;
drop database testone
show dbs
;
drop database testone;
show dbs;
\l
\l
use vegandb
;
\c vegandb
\d
select * from user;
select * from 'user';
select * from "user";
\c vegandb
select * from "recipe";
/c vegandb-test
clear
\d
\c vegandb-test;
COPY recipe FROM '/Users/mitch/Desktop/Recipes.csv' DELIMITER ',' CSV HEADER;
COPY recipe FROM '/Users/mitch/Desktop/Recipes.csv' DELIMITER ',' CSV HEADER;
COPY recipe FROM '/Users/mitch/Desktop/Recipes.csv' DELIMITER ',' CSV HEADER;
COPY recipe FROM '/Users/mitch/Desktop/Recipes.csv' DELIMITER ',' CSV HEADER;
select * from "user";
COPY recipe FROM '/Users/mitch/Desktop/Recipes.csv' DELIMITER ',' CSV HEADER;
\d
select * from recipe;
q\x
select * from recipe;
clear;
select * from "recipe";
+
            | 1 flax egg (1 Tbsp flax, 3 Tbsp water),                                                                                                                +                                                                                                                        +
            | Blend everything in food processor or mash,                                                                                                            +
            | Fry in oil,                                                                                                                                            +
            | Oven bake for 15 mins,                                                                                                                                 +
            | Serve with steamed vegetables                                                                                                                          +
            | # Tomato sauce,                                                                                                                                        +
            | Heat canned tomatoes on stovetop to thicken                                                                                                            +
            | Add mixed herbs, maple syrup and salt
servings    | 4
prep        | 10
cook        | 20
creatorId   | f6e76c09-a1e5-494e-bf23-b920a226bf27
createdAt   | 2021-07-25 21:41:53.295109
updatedAt   | 2021-07-25 21:41:53.295109
vegandb-test=# +
vegandb-test-#             | 1 flax egg (1 Tbsp flax, 3 Tbsp water),                                                                                                                +
delete from "recipe" where id='2366cffd-dd1e-4710-b8e3-eff1fbf04b53';
delete from recipe where id="2366cffd-dd1e-4710-b8e3-eff1fbf04b53";
delete from recipe where id = "2366cffd-dd1e-4710-b8e3-eff1fbf04b53";
delete from recipe where id = '2366cffd-dd1e-4710-b8e3-eff1fbf04b53';
select * from recipe;
delete from recipe where id = '73efe4b5-68ae-40f0-ad38-08f19912ca0b';
select * from recipe;
COPY recipe FROM '/Users/mitch/Desktop/Recipes.csv' DELIMITER ',' CSV HEADER;
select * from recipe;
code exercism download --exercise=simple-cipher --track=typescript
exit
\q
\c vegandb-test
\d
select * from recipe;
drop user;
drop "user";
drop table "user";
drop table recipe;
drop table user;
drop table "user";
\d
\d
\d
select * from recipe;
select * from recipe;
select * from recipe;
select * from recipe;
select * from recipe;
COPY recipe FROM '/Users/mitch/Desktop/result.csv' DELIMITER ',' CSV HEADER;
select * from recipe;
COPY recipe FROM '/Users/mitch/Desktop/Recipes.csv' DELIMITER ',' CSV HEADER;
select * from recipe;
COPY recipe FROM '/Users/mitch/Desktop/Recipes.csv' DELIMITER ',' CSV HEADER;
select * from recipe;
COPY recipe FROM '/Users/mitch/Desktop/Recipes.csv' DELIMITER ',' CSV HEADER;
select * from "user";
\d "user";
select * from "user";
select * from "user";
COPY recipe FROM '/Users/mitch/Desktop/Users.csv' DELIMITER ',' CSV HEADER;
COPY recipe FROM '/Users/mitch/Desktop/Users.csv' DELIMITER ',' CSV HEADER;
COPY recipe FROM '/Users/mitch/Desktop/Users.csv' DELIMITER ',' CSV HEADER;
COPY user FROM '/Users/mitch/Desktop/Users.csv' DELIMITER ',' CSV HEADER;
      COPY "user" FROM '/Users/mitch/Desktop/Users.csv' DELIMITER ',' CSV HEADER;
OPY "user" FROM '/Users/mitch/Desktop/Users.csv' DELIMITER ',' CSV HEADER;
COPY "user" FROM '/Users/mitch/Desktop/Users.csv' DELIMITER ',' CSV HEADER;
COPY "user" FROM '/Users/mitch/Desktop/Users.csv' DELIMITER ',' CSV HEADER;
select * from "user" where id = 'f6e76c09-a1e5-494e-bf23-b920a226bf27';
select * from "user";
select * from recipe;
COPY recipe FROM '/Users/mitch/Desktop/Recipes.csv' DELIMITER ',' CSV HEADER;
select * from recipe;
drop table "recipe";
COPY recipe FROM '/Users/mitch/Desktop/Recipes2.csv' DELIMITER ',' CSV HEADER;
\d
COPY recipe FROM '/Users/mitch/Desktop/Recipes2.csv' DELIMITER ',' CSV HEADER;
select * from recipe;
COPY recipe FROM '/Users/mitch/Desktop/Recipes.csv' DELIMITER ',' CSV HEADER;
select * from recipe;
drop table "recipe";
select * from recipe;
select * from recipe;
select * from "user"l
;
drop table "user";
drop table "recipe";
drop table "user";
select * from "user"l
;
\d
\d
select * from "user";
select * from "user";
select * from "user";
q
:q
exit
\q
\q
\q
drop table "user";
DROP TABLE "user" CASCADE;
\d
drop table recipe;
\d
\d
\d
drop table user__profile;
select * from recipe;
select * from user_profile;
select * from user_profile;
select * from recipe;
select * from recipe;
select * from user_profile ;
select * from user_profile ;
select * from recipe;
/c vegandb
\c vegandb
\d
drop table recipe;
drop table recipe;
drop table "user";
\d
exist
exit
\q
\c vegandb-test
select * from user_profile 
;
drop table user_profile ;
drop table recipe;
drop table user_profile ;
\d
\d
\d
\d
\d
\d
\d
\d
select * from recipe;
\c vegandb
\d
drop table user_profile;
select * from user_profile;
drop table recipe;;
drop table user_profile;;
\d
\c vegandb-testl
\c vegandb-test;
\d
\d
\d
\d
\d
drop table recipe, user_profile;
\d
\d
select * from recipe
;
\d
\d
select * from recipe;
drop table recipe, user_profile;
yd
\d
select * from recipe;
select * from recipe;
\x
select * from recipe;
\q
\c vegandb
select * from user_profile 
;
\q
\d
SELECT name, occasion, ingredients, ts_rank(document_with_weights, plainto_tsquery('banana'))
  FROM recipe
  WHERE document_with_weights @@ plainto_tsquery('banana')
  ORDER BY ts_rank(document_with_weights, plainto_tsquery('banana')) desc;
SELECT name, occasion, ingredients, ts_rank(document_with_weights, plainto_tsquery('banana'))
  FROM recipe
  WHERE document_with_weights @@ plainto_tsquery('banana')
  ORDER BY ts_rank(document_with_weights, plainto_tsquery('ban:*')) desc;
SELECT name, occasion, ingredients, ts_rank(document_with_weights, plainto_tsquery('banana'))
  FROM recipe
  WHERE document_with_weights @@ plainto_tsquery('banana')
  ORDER BY ts_rank(document_with_weights, plainto_tsquery('blue:*')) desc;
SELECT name, occasion, ingredients, ts_rank(document_with_weights, plainto_tsquery('blue:*'))
  FROM recipe
  WHERE document_with_weights @@ plainto_tsquery('blue:*')
  ORDER BY ts_rank(document_with_weights, plainto_tsquery('blue:*')) desc;
SELECT name, occasion, ingredients, ts_rank(document_with_weights, plainto_tsquery('blue*'))
  FROM recipe
  WHERE document_with_weights @@ plainto_tsquery('blue*')
  ORDER BY ts_rank(document_with_weights, plainto_tsquery('blue*')) desc;
SELECT name, occasion, ingredients, ts_rank(document_with_weights, plainto_tsquery('ba:*'))
  FROM recipe
  WHERE document_with_weights @@ plainto_tsquery('ba:*')
  ORDER BY ts_rank(document_with_weights, plainto_tsquery('ba:*')) desc;
SELECT name, occasion, ingredients, ts_rank(document_with_weights, to_tsquery('ba:*'))
  FROM recipe
  WHERE document_with_weights @@ to_tsquery('ba:*')
  ORDER BY ts_rank(document_with_weights, to_tsquery('ba:*')) desc;
SELECT name, occasion, ingredients
  FROM recipe
  WHERE document_with_weights @@ to_tsquery('blueberry banana apple')
  ORDER BY ts_rank(document_with_weights, to_tsquery('blueberry banana apple')) desc;
-- run query can use multiple words
SELECT name, occasion, ingredients
  FROM recipe
  WHERE document_with_weights @@ to_tsquery('blueberry & banana & apple')
  ORDER BY ts_rank(document_with_weights, to_tsquery('blueberry & banana & apple')) desc;
SELECT name, occasion, ingredients
  FROM recipe
  WHERE document_with_weights @@ to_tsquery('blueberry & banana & ap:*')
  ORDER BY ts_rank(document_with_weights, to_tsquery('blueberry & banana & ap:*')) desc;
SELECT name, occasion, ingredients
  FROM recipe
  WHERE document_with_weights @@ to_tsquery('blueberry & banana & ap:*')
  ORDER BY ts_rank(document_with_weights, to_tsquery('blueberry & banana & ap:*')) desc;
\u vegandb
/u vegandb
\c vegandb
\d
\d recipe
select * from recipe
;
select * from recipe;
\x
select * from recipe;
:q
exit
\q
\d
drop_table recipe;
drop table recipe;
drop table recipe cascade;
\d
select * from user_profile 
;
drop table user_profile ;
drop table user_profile cascade;;
\d
drop table migrations ;
drop table review;
\d
\d
drop table recipe, review, user_profile;
\d
\d
drop table recipe, review, user_profile;
\d
select * from user_profile ;
select * from review;
select * from review;
select * from user_profile ;
select * from recipe;
\d
drop table recipe, review, user_profile;
\d recipes;
\d recipe;
select * from favourite;
select * from favourite;
drop table favourite;
select * from favourite;
SELECT * FROM recipe LEFT JOIN "review" "revs" ON "revs"."userId"="recipe"."id";
\x
SELECT * FROM recipe LEFT JOIN "review" "revs" ON "revs"."userId"="recipe"."id";
SELECT * FROM recipe RIGHT JOIN "review" "revs" ON "revs"."userId"="recipe"."id"
;
SELECT * FROM recipe INNER JOIN "review" "revs" ON "revs"."userId"="recipe"."id"
;
\d
select * from recipe;
select * from user_profile
;
SELECT * FROM recipe RIGHT JOIN "review" "revs" ON "revs"."userId"="user_profile"."id";
SELECT * FROM recipe.*, user_profile.* RIGHT JOIN "review" "revs" ON "revs"."userId"="user_profile"."id"
;
SELECT * FROM review RIGHT JOIN "review" "revs" ON "revs"."userId"="user_profile"."id"
;
\d
SELECT * FROM review RIGHT JOIN "review" "revs" ON "revs"."userId"="user_profile"."id";
SELECT * 
FROM review 
RIGHT JOIN "user_profile" ON "user_profile"."id" = "review"."id";
SELECT * 
FROM review 
INNER JOIN "user_profile" ON "user_profile"."id" = "review"."id";
SELECT * 
FROM recipe 
INNER JOIN "review" ON "review"."recipeId" = "recipe"."id";
SELECT * 
FROM recipe 
INNER JOIN "review" ON "review"."recipeId" = "recipe"."id";
INNER JOIN "user_profile" ON "user_profile"."userId" = "review"."userId";SELECT * 
FROM recipe 
INNER JOIN "review" ON "review"."recipeId" = "recipe"."id";
INNER JOIN "user_profile" ON "user_profile"."userId" = "review"."userId";
SELECT * 
FROM recipe 
INNER JOIN "review" ON "review"."recipeId" = "recipe"."id";
INNER JOIN "user_profile" ON "user_profile"."userId" = "review"."userId";
SELECT * 
FROM recipe 
INNER JOIN "review" ON "review"."recipeId" = "recipe"."id"
INNER JOIN "user_profile" ON "user_profile"."userId" = "review"."userId";
SELECT * 
FROM recipe 
INNER JOIN "review" ON "review"."recipeId" = "recipe"."id"
INNER JOIN "user_profile" ON "user_profile"."id" = "review"."userId";
SELECT "recipe"."id" AS "recipe_id", "recipe"."name" AS "recipe_name", "recipe"."occasion" AS "recipe_occasion", "recipe"."ingredients" AS "recipe_ingredients", "recipe"."method" AS "recipe_method", "recipe"."servings" AS "recipe_servings", "recipe"."prep" AS "recipe_prep", "recipe"."cook" AS "recipe_cook", "recipe"."creatorId" AS "recipe_creatorId", "recipe"."createdAt" AS "recipe_createdAt", "recipe"."updatedAt" AS "recipe_updatedAt", "review"."id" AS "review_id", "review"."rating" AS "review_rating", "review"."comment" AS "review_comment", "review"."recipeId" AS "review_recipeId", "review"."userId" AS "review_userId" FROM "recipe" "recipe" INNER JOIN "review" "review" ON "review"."userId"="recipe"."id"
SELECT * 
FROM recipe 
INNER JOIN "review" ON "review"."recipeId" = "recipe"."id"
INNER JOIN "user_profile" ON "user_profile"."id" = "review"."userId";
SELECT "recipe"."id" AS "recipe_id", "recipe"."name" AS "recipe_name", "recipe"."occasion" AS "recipe_occasion", "recipe"."ingredients" AS "recipe_ingredients", "recipe"."method" AS "recipe_method", "recipe"."servings" AS "recipe_servings", "recipe"."prep" AS "recipe_prep", "recipe"."cook" AS "recipe_cook", "recipe"."creatorId" AS "recipe_creatorId", "recipe"."createdAt" AS "recipe_createdAt", "recipe"."updatedAt" AS "recipe_updatedAt", "review"."id" AS "review_id", "review"."rating" AS "review_rating", "review"."comment" AS "review_comment", "review"."recipeId" AS "review_recipeId", "review"."userId" AS "review_userId" 
FROM "recipe" "recipe" 
INNER JOIN "review" "review" ON "review"."recipeId"="recipe"."id";
SELECT "recipe"."id" AS "recipe_id", "recipe"."name" AS "recipe_name", "recipe"."occasion" AS "recipe_occasion", "recipe"."ingredients" AS "recipe_ingredients", "recipe"."method" AS "recipe_method", "recipe"."servings" AS "recipe_servings", "recipe"."prep" AS "recipe_prep", "recipe"."cook" AS "recipe_cook", "recipe"."creatorId" AS "recipe_creatorId", "recipe"."createdAt" AS "recipe_createdAt", "recipe"."updatedAt" AS "recipe_updatedAt", "review"."id" AS "review_id", "review"."rating" AS "review_rating", "review"."comment" AS "review_comment", "review"."recipeId" AS "review_recipeId", "review"."userId" AS "review_userId" 
FROM "recipe" "recipe" 
INNER JOIN "review" "review" ON "review"."recipeId"="recipe"."id";
\d
\d recipe
\d
drop table recipe, favourite, review, user_profile;
\d
\d
select * from recipel
;
select * from recipe;
select * from recipe;
select * from user_profile;
select * from recipe;
\x
select * from recipe;
recipe_tsvector_trigger();
\df
\x
\df
recipe_tsvector_trigger
;
SELECT recipe_tsvector_trigger();
EXECUTE PROCEDURE recipe_tsvector_trigger;
EXECUTE PROCEDURE recipe_tsvector_trigger();;
EXECUTE recipe_tsvector_trigger();D
EXECUTE recipe_tsvector_trigger();
EXECUTE recipe_tsvector_trigger;
EXECUTE PROCEDURE recipe_tsvector_trigger;
~UPDATE recipe SET servings = 10 WHERE id = 'b1dcfe20-9bf3-4ccc-b9ec-33e8d11df06c';
UPDATE recipe SET servings = 10 WHERE id = 'b1dcfe20-9bf3-4ccc-b9ec-33e8d11df06c';
select * from recipe where  id = 'b1dcfe20-9bf3-4ccc-b9ec-33e8d11df06c';
\x
select * from recipe where  id = 'b1dcfe20-9bf3-4ccc-b9ec-33e8d11df06c';
\dft
\df
\x
\df
\dft
\d recipe_tsvector_trigger;
\df+
\x
\df+
\dft+
\d
\x
\d
drop table migrations, migrations_id_seq;
drop table migrations;
\d
\df;
\df
drop function recipe_tsvector_trigger;
\df
\d
drop table migrations ;
\df
\dft
drop triggewr recipe_tsvector_trigger;
drop trigger recipe_tsvector_trigger;
drop function recipe_tsvector_trigger;
drop function recipe_tsvector_trigger cascade;
\d
drop table migrations ;
\d
\df
\dft
select * from recipe; \x;
\x
select * from recipe; \x;
\d recipe;
;q
exot
exit
\q
ls
\d
CREATE TRIGGER computeAvg
AFTER INSERT ON review
FOR EACH ROW
    UPDATE recipe
    SET "averageRating" = 
      (SELECT AVG(rating) FROM review WHERE "recipe"."id" = "review"."recipeId")
    WHERE id = NEW.courseId; 
CREATE TRIGGER computeAvg
AFTER INSERT ON review
FOR EACH ROW
    UPDATE recipe
    SET "averageRating" = 
      (SELECT AVG(rating) FROM review WHERE "recipe"."id" = "review"."recipeId")
    WHERE id = NEW.courseId; 
CREATE TRIGGER computeAvg
AFTER INSERT ON review
FOR EACH ROW
    UPDATE "recipe"
    SET "averageRating" = (SELECT AVG(rating) FROM review WHERE "recipe"."id" = "review"."recipeId")
    WHERE id = NEW.courseId;
\d
select * from review ;
SELECT AVG(rating) FROM review WHERE "review"."recipeId" = '4cf6acc5-9636-4429-a760-0824e8d01afb';
CREATE or REPLACE TRIGGER computeAvg AFTER INSERT ON "review"
FOR EACH ROW
    UPDATE "recipe"
    SET "averageRating" = (SELECT AVG(rating) FROM review WHERE "recipe"."id" = "review"."recipeId")
\df
\dft
CREATE or REPLACE TRIGGER computeAvg AFTER INSERT ON "review"
FOR EACH ROW
    UPDATE "recipe"
    SET "averageRating" = (SELECT AVG(rating) FROM review WHERE "recipe"."id" = "review"."recipeId");
DROP TRIGGER IF EXISTS computeAvg
  ON "review";
TRIGGER computeAvg AFTER INSERT ON "review"
FOR EACH ROW
    UPDATE "recipe"
    SET "averageRating" = (SELECT AVG(rating) FROM review WHERE "recipe"."id" = "review"."recipeId");
DROP TRIGGER IF EXISTS computeAvg
  ON "review";
CREATE TRIGGER computeAvg AFTER INSERT ON "review"
FOR EACH ROW
    UPDATE "recipe"
    SET "averageRating" = (SELECT AVG(rating) FROM review WHERE "recipe"."id" = "review"."recipeId");
CREATE TRIGGER computeAvg AFTER INSERT ON "review"
FOR EACH ROW
    UPDATE "recipe"
    SET "averageRating" = (SELECT AVG(rating) FROM review WHERE "recipe"."id" = "review"."recipeId");
CREATE TRIGGER computeAvg AFTER INSERT ON "review"
FOR EACH ROW
    UPDATE "recipe"
    SET "averageRating" = (SELECT AVG(rating) FROM review WHERE "recipe"."id" = "review"."recipeId");
CREATE TRIGGER computeAvg
AFTER INSERT ON CoursesRatings
FOR EACH ROW
    UPDATE Course
    SET rating = (SELECT AVG(rating) FROM CoursesRatings
                         WHERE CoursesRatings.courseId = Course.id)
    WHERE id = NEW.courseId;    
CREATE TRIGGER computeAvg AFTER INSERT ON "review"
FOR EACH ROW
    UPDATE "recipe"
    SET "averageRating" = (SELECT AVG(rating) FROM "review" WHERE "recipe"."id" = "review"."recipeId");
    WHERE id = NEW.id;
CREATE TRIGGER computeAvg AFTER INSERT ON "review"
FOR EACH ROW
    UPDATE "recipe"
    SET "averageRating" = (SELECT AVG(rating) FROM "review" WHERE "recipe"."id" = "review"."recipeId")
    WHERE id = NEW.id;
CREATE TRIGGER computeAvg AFTER INSERT ON "review"
FOR EACH ROW
    UPDATE recipe
    SET "averageRating" = (SELECT AVG(rating) FROM "review" WHERE "recipe"."id" = "review"."recipeId")
    WHERE id = NEW.id;
CREATE TRIGGER computeAvg AFTER INSERT ON review
FOR EACH ROW
    UPDATE "recipe"
    SET "averageRating" = (SELECT AVG(rating) FROM "review" WHERE "recipe"."id" = "review"."recipeId")
    WHERE id = NEW.id;
CREATE TRIGGER computeAvg 
AFTER INSERT ON "review"
FOR EACH ROW
    UPDATE "recipe"
    SET "averageRating" = (SELECT AVG(rating) FROM "review" WHERE "recipe"."id" = "review"."recipeId")
    WHERE id = NEW.id;
\d review
\d recipe
\d recipe;
CREATE TRIGGER average_recipe_rating 
AFTER INSERT ON review
FOR EACH ROW
    UPDATE recipe
    SET average_rating = (SELECT AVG(rating) FROM "review" WHERE "recipe"."id" = "review"."recipeId")
    WHERE id = NEW.id;
\d recipe
select * from recipe;
\x
select * from recipe;
SELECT AVG(rating) FROM "review" WHERE "recipe"."id" = "review"."recipeId"
;
\d
SELECT * 
FROM recipe 
INNER JOIN "tagging" ON "tagging"."recipeId" = "recipe"."id"
INNER JOIN "tag" ON "tag"."id" = "tagging"."tagId";
SELECT * 
FROM recipe 
INNER JOIN "tagging" ON "tagging"."recipeId" = UUID("recipe"."id")
INNER JOIN "tag" ON "tag"."id" = "tagging"."tagId";
drop table favourite, migrations, recipe, review, user_profile, tag, tagging;
SELECT * 
FROM recipe 
INNER JOIN "tagging" ON "tagging"."recipeId" = UUID("recipe"."id")
INNER JOIN "tag" ON "tag"."id" = "tagging"."tagId";
\d tag
\d tagging
SELECT * 
FROM recipe 
INNER JOIN "tagging" ON "tagging"."recipeId" = "recipe"."id"
INNER JOIN "tag" ON "tag"."id" = "tagging"."tagId";
drop table favourite, migrations, recipe, review, user_profile, tag, tagging;
SELECT * 
FROM recipe 
INNER JOIN "tagging" ON "tagging"."recipeId" = "recipe"."id"
INNER JOIN "tag" ON "tag"."id" = "tagging"."tagId";
SELECT * 
FROM recipe 
INNER JOIN "tagging" ON "tagging"."recipeId" = "recipe"."id"
INNER JOIN "tag" ON "tag"."id" = "tagging"."tagId";clear
clear
d
;
\x
SELECT * 
FROM recipe 
INNER JOIN "tagging" ON "tagging"."recipeId" = "recipe"."id"
INNER JOIN "tag" ON "tag"."id" = "tagging"."tagId";
select * from recipe;
drop table favourite, migrations, recipe, review, user_profile, tag, tagging;
drop table favourite, migrations, recipe, review, user_profile, tag, tagging;
\d recipe;
drop table favourite, migrations, recipe, review, user_profile, tag, tagging;
SELECT "r"."id" AS "r_id", "r"."name" AS "r_name", "r"."occasion" AS "r_occasion", "r"."difficulty" AS "r_difficulty", "r"."cost" AS "r_cost", "r"."ingredients" AS "r_ingredients", "r"."method" AS "r_method", "r"."servings" AS "r_servings", "r"."prep" AS "r_prep", "r"."cook" AS "r_cook", "r"."creatorId" AS "r_creatorId", "r"."createdAt" AS "r_createdAt", "r"."updatedAt" AS "r_updatedAt", "r"."average_rating" AS "r_average_rating", "r"."total_votes" AS "r_total_votes", "r"."taggingId" AS "r_taggingId", "tag"."id" AS "tag_id", "tag"."recipeId" AS "tag_recipeId", "tag"."tagId" AS "tag_tagId" FROM "recipe" "r" INNER JOIN "tagging" "tag" ON "tag"."id"="r"."taggingId"
;
select * from recipe inner join tagging on "tagging"."id" = "recipe.taggingId";
\d recipe;
\d tagging
select * from recipe inner join tagging on "tagging"."id" = "recipe.taggingId";
drop table favourite, migrations, recipe, review, user_profile, tag, tagging;
select * from recipe inner join tagging on "tagging"."id" = "recipe.taggingId";
\d recipe;
\d tagging
drop table favourite, migrations, recipe, review, user_profile, tag, tagging;
\d recipe;
\d recipe;
\d
\d recipe;
\d tagging
\d tagging
select *
from "recipe" "r"
INNER JOIN "tagging" "tag" ON "tag"."recipeId"="r"."id"
;
SELECT * 
FROM recipe 
INNER JOIN "tagging" ON "tagging"."recipeId" = "recipe"."id"
.
;
SELECT * 
FROM recipe 
INNER JOIN "tagging" ON "tagging"."recipeId" = "recipe"."id"
;
select * from tagging
;
select * from tagging;
COPY tagging FROM '/Users/mitch/Google Drive/My Drive/vegan_app_csv_data/taggings.csv' DELIMITER ',' CSV HEADER;
\d tagging
drop table favourite, migrations, recipe, review, user_profile, tag, tagging;
\d tagging
\d tag
\d tagging;
drop table favourite, migrations, recipe, review, user_profile, tag, tagging;
\d tagging
drop table favourite, migrations, recipe, review, user_profile, tag, tagging;
COPY tag FROM '/Users/mitch/Google Drive/My Drive/vegan_app_csv_data/tags.csv' DELIMITER ',' CSV HEADER;
select * from tag;
select * from tagging;
COPY tagging FROM '/Users/mitch/Google Drive/My Drive/vegan_app_csv_data/taggings.csv' DELIMITER ',' CSV HEADER;
drop table favourite, migrations, recipe, review, user_profile, tag, tagging;
COPY tagging FROM '/Users/mitch/Google Drive/My Drive/vegan_app_csv_data/taggings.csv' DELIMITER ',' CSV HEADER;
COPY tagging FROM '/Users/mitch/Google Drive/My Drive/vegan_app_csv_data/taggings.csv' DELIMITER ',' CSV HEADER;
drop table favourite, migrations, recipe, review, user_profile, tag, tagging;
COPY tagging FROM '/Users/mitch/Google Drive/My Drive/vegan_app_csv_data/taggings.csv' DELIMITER ',' CSV HEADER;
COPY tagging FROM '/Users/mitch/Google Drive/My Drive/vegan_app_csv_data/taggings.csv' DELIMITER ',' CSV HEADER;
\d tagging
INSERT INTO tagging (
  recipeId,
  tagId
)
VALUES ('73efe4b5-68ae-40f0-ad38-08f19912ca0b', '1';
om
;
;
)
;
INSERT INTO tagging (
  recipeId,
  tagId
)
VALUES ('73efe4b5-68ae-40f0-ad38-08f19912ca0b', '1');
INSERT INTO tagging (
  recipeId,
  tagId
)
VALUES ('73efe4b5-68ae-40f0-ad38-08f19912ca0b', '1');
\d tagging;
INSERT INTO tagging (
  recipeId,
  tagId
)
VALUES ('73efe4b5-68ae-40f0-ad38-08f19912ca0b', '1');
INSERT INTO tagging (
  "recipeId",
  tagId
)
VALUES ('73efe4b5-68ae-40f0-ad38-08f19912ca0b', '1');
INSERT INTO tagging (
  "recipeId",
  "tagId"
)
VALUES ('73efe4b5-68ae-40f0-ad38-08f19912ca0b', '1');
COPY recipe FROM '/Users/mitch/Google Drive/My Drive/vegan_app_csv_data/recipes.csv' DELIMITER ',' CSV HEADER;
drop table favourite, migrations, recipe, review, user_profile, tag, tagging;
SELECT "r"."id" AS "r_id", "r"."name" AS "r_name", "r"."occasion" AS "r_occasion", "r"."difficulty" AS "r_difficulty", "r"."cost" AS "r_cost", "r"."ingredients" AS "r_ingredients", "r"."method" AS "r_method", "r"."servings" AS "r_servings", "r"."prep" AS "r_prep", "r"."cook" AS "r_cook", "r"."creatorId" AS "r_creatorId", "r"."createdAt" AS "r_createdAt", "r"."updatedAt" AS "r_updatedAt", "r"."average_rating" AS "r_average_rating", "r"."total_votes" AS "r_total_votes", "tag"."id" AS "tag_id", "tag"."recipeId" AS "tag_recipeId", "tag"."tagId" AS "tag_tagId" FROM "recipe" "r" INNER JOIN "tagging" "tag" ON "tag"."recipeId"="r"."id"
;
drop table favourite, migrations, recipe, review, user_profile, tag, tagging;
\d
\x
\d
drop table favourite, migrations, recipe, review, user_profile, tag, tagging;
drop table favourite, migrations, recipe, review, user_profile, tag, tagging CASCADE;;
\d
\d recipe_tagging_tag;
drop table recipe_tagging_tag;
\d
\d tagging;
drop table favourite, migrations, recipe, review, user_profile, tag, tagging CASCADE;
\d
drop table recipe_tagging_tag;
\d
\d
\d recipe_tags_tag
drop table favourite, migrations, recipe, review, user_profile, tag, tagging CASCADE;
drop table favourite, migrations, recipe, review, user_profile, tag CASCADE;
\d
drop table recipe_tags_tag;
\d
select * from recipe_tags_tag;
\d
select * from tag;
select tags from recipe;
select * from recipe;
select tags from recipe left join recipe_tags_tag on recipe.tags = recipe.id;
select tags from recipe left join recipe_tags_tag on recipe.tags = recipe.id;
\d recipe;
\d
\d recipe_tags_tag
select * from recipe LEFT JOIN "recipe_tags_tag" "recipe_tags" ON "recipe_tags"."recipeId"="recipe"."id" LEFT JOIN "tag" "tags" ON "tags"."id"="recipe_tags"."tagId";
\x
select * from recipe LEFT JOIN "recipe_tags_tag" "recipe_tags" ON "recipe_tags"."recipeId"="recipe"."id" LEFT JOIN "tag" "tags" ON "tags"."id"="recipe_tags"."tagId";
\d recipe_tags;
SELECT * FROM recipe LEFT JOIN "recipe_tags_tag" ON "recipe_tags_tag"."recipeId"="recipe"."id" LEFT JOIN "tag" "tags" ON "tags"."id"="recipe_tags_tag"."tagId";
SELECT * FROM recipe LEFT JOIN "recipe_tags_tag" ON "recipe_tags_tag"."recipeId"="recipe"."id" LEFT JOIN "tag" "tags" ON "tags"."id"="recipe_tags_tag"."tagId";
select * from recipe_tags_tag
;
select * from recipe_tags_tag
;
history
;
\s
drop table favourite, migrations, recipe, review, user_profile, tag, recipe_tags_tag;
\d
select * from recipe_tags_tag
;
DECLARE @searchtags STR
SET @searchtags
SELECT @searchtags AS searchtagsdefault
;
SELECT recipe.id from recipe inner join recipe.tags where tag.name IN ($1, $2, $3) -- PARAMETERS: ["iron", "protein"];
;
\d recipe;
SELECT "recipe.id" from "recipe" 
INNER JOIN "recipe_tags_tag" "recipe_tag" ON "recipe_tag"."recipeId"="recipe"."id" 
INNER JOIN "tag" "tag" ON "tag"."id"="recipe_tag"."tagId"
WHERE "tag"."name" IN ($1, $2, $3) -- PARAMETERS: ["iron", "protein"];
;
SELECT "recipe"."id" from "recipe" 
INNER JOIN "recipe_tags_tag" "recipe_tag" ON "recipe_tag"."recipeId"="recipe"."id" 
INNER JOIN "tag" "tag" ON "tag"."id"="recipe_tag"."tagId"
WHERE "tag"."name" IN ($1, $2, $3) -- PARAMETERS: ["iron", "protein"]
;
SELECT "recipe"."id" from "recipe" 
INNER JOIN "recipe_tags_tag" "recipe_tag" ON "recipe_tag"."recipeId"="recipe"."id" 
INNER JOIN "tag" "tag" ON "tag"."id"="recipe_tag"."tagId"
WHERE "tag"."name" IN ($1, $2, $3) 
-- PARAMETERS: ["iron", "protein"]
;
SELECT "recipe"."id" from "recipe" 
INNER JOIN "recipe_tags_tag" "recipe_tag" ON "recipe_tag"."recipeId"="recipe"."id" 
INNER JOIN "tag" "tag" ON "tag"."id"="recipe_tag"."tagId"
WHERE "tag"."name" IN ("iron", "protein");
SELECT "recipe"."id" from "recipe" 
INNER JOIN "recipe_tags_tag" "recipe_tag" ON "recipe_tag"."recipeId"="recipe"."id" 
INNER JOIN "tag" "tag" ON "tag"."id"="recipe_tag"."tagId"
WHERE "tag"."name" IN ('iron', 'protein'); 
SELECT "recipe"."id", "recipe"."name" from "recipe" 
INNER JOIN "recipe_tags_tag" "recipe_tag" ON "recipe_tag"."recipeId"="recipe"."id" 
INNER JOIN "tag" "tag" ON "tag"."id"="recipe_tag"."tagId"
WHERE "tag"."name" IN ('iron', 'protein'); 
SELECT "recipe"."id", "recipe"."name" from "recipe" 
INNER JOIN "recipe_tags_tag" "recipe_tag" ON "recipe_tag"."recipeId"="recipe"."id" 
INNER JOIN "tag" "tag" ON "tag"."id"="recipe_tag"."tagId"
WHERE "tag"."name" IN ('iron', 'protein'); 
GROUP BY "recipe"."id"
;
SELECT "recipe"."id", "recipe"."name" from "recipe" 
INNER JOIN "recipe_tags_tag" "recipe_tag" ON "recipe_tag"."recipeId"="recipe"."id" 
INNER JOIN "tag" "tag" ON "tag"."id"="recipe_tag"."tagId"
WHERE "tag"."name" IN ('iron', 'protein')
GROUP BY "recipe"."id";
\d
\d
\d recipe;
select document_with_weights from recipe;
\s
\d
select * from recipe;
\d
SELECT * 
  FROM recipe
  LEFT JOIN "recipe_tags_tag" "recipe_tag" ON "recipe_tag"."recipeId"="recipe"."id" 
  LEFT JOIN "tag" "tag" ON "tag"."id"="recipe_tag"."tagId"
  WHERE recipe.occasion='snack';
\x
SELECT * 
  FROM recipe
  LEFT JOIN "recipe_tags_tag" "recipe_tag" ON "recipe_tag"."recipeId"="recipe"."id" 
  LEFT JOIN "tag" "tag" ON "tag"."id"="recipe_tag"."tagId"
  WHERE recipe.occasion='snack';
SELECT * 
  FROM recipe
  LEFT JOIN "recipe_tags_tag" "recipe_tag" ON "recipe_tag"."recipeId"="recipe"."id" 
  LEFT JOIN "tag" "tag" ON "tag"."id"="recipe_tag"."tagId"
  WHERE recipe.occasion='snack';
SELECT * 
      FROM recipe
      LEFT JOIN "recipe_tags_tag" "recipe_tag" ON "recipe_tag"."recipeId"="recipe"."id" 
      LEFT JOIN "tag" "tag" ON "tag"."id"="recipe_tag"."tagId";
floor(random() * (SELECT COUNT(*) FROM recipe WHERE recipe.occasion='snack'));
FLOOR(RANDOM()*10);
FLOOR(10.5);
SELECT FLOOR(10.5);
SELECT floor(random() * (SELECT COUNT(*) FROM recipe WHERE recipe.occasion='snack'));
SELECT floor(random() * (SELECT COUNT(*) FROM recipe WHERE recipe.occasion='snack'));
SELECT floor(random() * (SELECT COUNT(*) FROM recipe WHERE recipe.occasion='snack'));
SELECT floor(random() * (SELECT COUNT(*) FROM recipe WHERE recipe.occasion='snack'));
SELECT floor(random() * (SELECT COUNT(*) FROM recipe WHERE recipe.occasion='snack'));
SELECT floor(random() * (SELECT COUNT(*) FROM recipe WHERE recipe.occasion='snack'));
SELECT floor(random() * (SELECT COUNT(*) FROM recipe WHERE recipe.occasion='snack'));
SELECT floor(random() * (SELECT COUNT(*) FROM recipe WHERE recipe.occasion='snack'));
SELECT floor(random() * (SELECT COUNT(*) FROM recipe WHERE recipe.occasion='snack'));
SELECT floor(random() * (SELECT COUNT(*) FROM recipe WHERE recipe.occasion='snack'));
SELECT floor(random() * (SELECT COUNT(*) FROM recipe WHERE recipe.occasion='snack'));
SELECT * FROM recipe TABLESAMPLE BERNOULLI (20);
SELECT * FROM recipe TABLESAMPLE BERNOULLI (20);
SELECT * FROM recipe TABLESAMPLE BERNOULLI (20) WHERE recipe.occasion='snack';;
SELECT * FROM recipe TABLESAMPLE BERNOULLI (20) WHERE recipe.occasion='snack';
SELECT * FROM recipe TABLESAMPLE BERNOULLI (20) WHERE recipe.occasion='snack';
SELECT * FROM recipe TABLESAMPLE SYSTEM_ROWS(10);
CREATE EXTENSION tsm_system_rows;
SELECT * FROM recipe TABLESAMPLE SYSTEM_ROWS(10);
SELECT * FROM recipe TABLESAMPLE SYSTEM_ROWS(10) where recipe.occasion = 'snack';;
SELECT * FROM recipe TABLESAMPLE SYSTEM_ROWS(10) where recipe.occasion = 'snack';
SELECT * FROM recipe TABLESAMPLE SYSTEM_ROWS(10) where recipe.occasion = 'snack';
SELECT * FROM recipe TABLESAMPLE SYSTEM_ROWS(10);
  SELECT * 
  FROM (SELECT * FROM recipe WHERE recipe.occasion='snack') 
  TABLESAMPLE SYSTEM_ROWS(5);
SELECT * 
  FROM (SELECT * FROM recipe WHERE recipe.occasion='snack') 
  TABLESAMPLE SYSTEM_ROWS(5);
  SELECT * 
  FROM (SELECT * FROM recipe WHERE recipe.occasion='snack') AS r
  TABLESAMPLE SYSTEM_ROWS(5);
SELECT * FROM recipe WHERE recipe.occasion='snack';
  SELECT * 
  FROM (SELECT * FROM recipe WHERE recipe.occasion='snack') AS r
  TABLESAMPLE SYSTEM_ROWS(5);
  SELECT * 
  FROM (SELECT * FROM recipe WHERE recipe.occasion='snack') AS r
  TABLESAMPLE BERNOULLI(5);
  SELECT * 
  FROM (SELECT * FROM recipe WHERE recipe.occasion='snack') AS r;
select * from recipe where recipe.occasion='breakfast';
SELECT DISTINCT "recipe"."name", MIN(RANDOM()) AS ord 
FROM "recipe" "recipe" 
WHERE "recipe"."occasion" = 'snack' 
GROUP BY "recipe"."name" ;
SELECT DISTINCT "recipe"."name", MIN(RANDOM()) AS ord 
FROM "recipe" "recipe" 
WHERE "recipe"."occasion" = 'snack' 
GROUP BY "recipe"."name" 
ORDER BY "ord";
SELECT DISTINCT "recipe"."name", MIN(RANDOM()) AS ord 
FROM "recipe" "recipe" 
WHERE "recipe"."occasion" = 'snack' 
GROUP BY "recipe"."name" 
ORDER BY "ord";
SELECT DISTINCT "recipe"."name", MIN(RANDOM()) AS ord 
FROM "recipe" "recipe" 
WHERE "recipe"."occasion" = 'snack' 
GROUP BY "recipe"."name" 
ORDER BY "ord";
SELECT DISTINCT "recipe"."name", MIN(RANDOM()) AS ord 
FROM "recipe" "recipe" 
WHERE "recipe"."occasion" = 'snack' 
GROUP BY "recipe"."name" 
ORDER BY "ord";
SELECT DISTINCT "recipe"."name", MIN(RANDOM()) AS ord FROM "recipe" "recipe" WHERE "recipe"."occasion" = 'snack' GROUP BY "recipe"."name" ORDER BY ord ASC
;
\s
\d
select * from user_profile 
;
\d
\l
\c vegandb
\l
\d
select * from user_profile 
;
select * from user_profile 
;
select * from user_profile 
;
select * from user_profile 
;
\d
select * from user_profile 
;
select * from user_profile 
;
select * from user_profile 
;
select * from user_profile 
;
cd ~
exit
\q
createdb twitter_clone
show dbs
;
\d
\l
createdb twitter_clone;
create db twitter_clone;
create database twitter_clone
;
\d
\l
\c twitter_clone 
\d
\d Tweet
\l Tweet
\s Tweet
